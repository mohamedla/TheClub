// <auto-generated />
using System;
using ClubModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClubAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20231031045232_AddMemberEntity")]
    partial class AddMemberEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.CityCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CityId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("cityCodes");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.GenderCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GenderId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("genderCodes");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.JobCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("jobCodes");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.MartialStatusCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MartialStatusId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("martialStatusCodes");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.MembershipCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MembershipId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("membershipCodes");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.NationalityCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NationalityId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("nationalityCodes");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.QualificationCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("QualId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("QualCodes");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.ReferenceCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RefId");

                    b.Property<bool>("AgeFlag")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.Property<decimal>("ReferenceFee")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("RefFee");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("RefCodes");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.ReligionCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReligionId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("religionCodes");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.SectionCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SectionId");

                    b.Property<bool>("Annual")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<bool>("ComPenalty")
                        .HasColumnType("bit");

                    b.Property<bool>("Donation")
                        .HasColumnType("bit");

                    b.Property<bool>("Improve")
                        .HasColumnType("bit");

                    b.Property<bool>("Init")
                        .HasColumnType("bit");

                    b.Property<bool>("IsId")
                        .HasColumnType("bit")
                        .HasColumnName("Id");

                    b.Property<bool>("Maintenance")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.Property<bool>("Office")
                        .HasColumnType("bit");

                    b.Property<bool>("Penalty")
                        .HasColumnType("bit");

                    b.Property<bool>("Player")
                        .HasColumnType("bit");

                    b.Property<bool>("Pool")
                        .HasColumnType("bit");

                    b.Property<bool>("Post")
                        .HasColumnType("bit");

                    b.Property<bool>("Reg")
                        .HasColumnType("bit");

                    b.Property<bool>("ReserveFee")
                        .HasColumnType("bit");

                    b.Property<bool>("River")
                        .HasColumnType("bit");

                    b.Property<bool>("Society")
                        .HasColumnType("bit");

                    b.Property<bool>("Stamp")
                        .HasColumnType("bit");

                    b.Property<bool>("Worker")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("sectionCodes");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.TitleCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TitleId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("titleCodes");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.TransferCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TransId");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("TransCodes");
                });

            modelBuilder.Entity("ClubModels.Models.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MemberId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("BirthPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CardDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("F_Lock")
                        .HasColumnType("int");

                    b.Property<Guid>("Gender")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasCard")
                        .HasColumnType("bit");

                    b.Property<string>("IdNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JobAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MSCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("M_Lock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MartialStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MemberEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("MemberOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberOrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MemberRenewDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MembershipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("NationalityID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PersonalPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("QualId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReligionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TMPFLG")
                        .HasColumnType("int");

                    b.Property<Guid>("Title")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BirthPlaceId");

                    b.HasIndex("CityId");

                    b.HasIndex("Gender");

                    b.HasIndex("IdNo")
                        .IsUnique();

                    b.HasIndex("JobId");

                    b.HasIndex("MartialStatusId");

                    b.HasIndex("MembershipId");

                    b.HasIndex("NationalityID");

                    b.HasIndex("QualId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("SectionId");

                    b.HasIndex("Title");

                    b.ToTable("members");
                });

            modelBuilder.Entity("ClubModels.Models.Member", b =>
                {
                    b.HasOne("ClubModels.Models.GeneralCodes.CityCode", "BirthPlace")
                        .WithMany()
                        .HasForeignKey("BirthPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClubModels.Models.GeneralCodes.CityCode", "CityCode")
                        .WithMany("Members")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClubModels.Models.GeneralCodes.GenderCode", "GenderCode")
                        .WithMany("Members")
                        .HasForeignKey("Gender")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClubModels.Models.GeneralCodes.JobCode", "JobCode")
                        .WithMany("Members")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClubModels.Models.GeneralCodes.MartialStatusCode", "MartialStatusCode")
                        .WithMany("Members")
                        .HasForeignKey("MartialStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClubModels.Models.GeneralCodes.MembershipCode", "MembershipCode")
                        .WithMany("Members")
                        .HasForeignKey("MembershipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClubModels.Models.GeneralCodes.NationalityCode", "NationalityCode")
                        .WithMany("Members")
                        .HasForeignKey("NationalityID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClubModels.Models.GeneralCodes.QualificationCode", "QualificationCode")
                        .WithMany("Members")
                        .HasForeignKey("QualId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClubModels.Models.GeneralCodes.ReligionCode", "ReligionCode")
                        .WithMany("Members")
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClubModels.Models.GeneralCodes.SectionCode", "SectionCode")
                        .WithMany("Members")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClubModels.Models.GeneralCodes.TitleCode", "TitleCode")
                        .WithMany("Members")
                        .HasForeignKey("Title")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BirthPlace");

                    b.Navigation("CityCode");

                    b.Navigation("GenderCode");

                    b.Navigation("JobCode");

                    b.Navigation("MartialStatusCode");

                    b.Navigation("MembershipCode");

                    b.Navigation("NationalityCode");

                    b.Navigation("QualificationCode");

                    b.Navigation("ReligionCode");

                    b.Navigation("SectionCode");

                    b.Navigation("TitleCode");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.CityCode", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.GenderCode", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.JobCode", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.MartialStatusCode", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.MembershipCode", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.NationalityCode", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.QualificationCode", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.ReligionCode", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.SectionCode", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("ClubModels.Models.GeneralCodes.TitleCode", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
