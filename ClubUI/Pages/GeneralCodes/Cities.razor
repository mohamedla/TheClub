@page "/cities"
@using ClubEntities.DataTransferObjects.CityCodes;
@using ClubModels.Models.GeneralCodes
@using ClubModels.Models;
@using ClubUI.Pages.GeneralCodes.Model;
@inject HttpClient Http
@inject IMapper Mapper

<h3>Cities</h3>

<div>
    <CodeForm 
        EntityName = "City"
        SelectedEntity="@CVModel.SelectedEntity" 
        SaveMethod="@FormSubmitted" 
        MakeNew="@CVModel.MakeNew"
        CalloutType="@CVModel.CallType"
        LastSubmitResult="@CVModel.LastSubmitResult"
    ></CodeForm>
</div>
<div>
    <Grid 
        TItem="CityCode" 
        class="table table-hover table-bordered table-striped" 
        Data="CVModel.Entities" 
        AllowFiltering="true" 
        Responsive="true" 
        AllowRowClick="true" 
        OnRowClick="OnRowClick"
        AllowPaging="true"
        PageSize="20"
        AllowSorting="true">

        <GridColumn TItem="CityCode" HeaderText="Code" PropertyName="Code" HeaderTextAlignment="Alignment.Center" SortDirection="@CVModel.CodeSort" SortKeySelector="item => item.Code">
            @context.Code
        </GridColumn>

        <GridColumn TItem="CityCode" HeaderText="Name" PropertyName="Name" HeaderTextAlignment="Alignment.Center" TextAlignment="Alignment.Center" SortKeySelector="item => item.Name">
            @context.Name
        </GridColumn>

        <GridColumn TItem="CityCode" HeaderText="Remove" HeaderTextAlignment="Alignment.Center" Sortable="false" Filterable="false">
            <div class="d-flex justify-content-center" >
                <Button Color="ButtonColor.Danger" @onclick="CVModel.OnDeleteVerifyShow"><Icon Name="IconName.TrashFill" ></Icon></Button>
            </div>
        </GridColumn>

    </Grid>

</div>

<Modal @ref="CVModel.DeleteVerifyModal" Title="Modal title">
    <BodyTemplate>
        Are You Sure You Want To Delete City
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="CVModel.OnDeleteVerifyHide">Close</Button>
        <Button Color="ButtonColor.Danger" @onclick="DeleteCity">Delete</Button>
    </FooterTemplate>
</Modal>

@code {
    private CodeViewModel<CityCode, CityCodeCreateDTO, CityCodeEditDTO> CVModel = new CodeViewModel<CityCode, CityCodeCreateDTO, CityCodeEditDTO>()
    {
        IsNew = true,
        CodeSort = SortDirection.Ascending,
        CallType = AlertColor.Danger,
        APIURL = "api/CityCodes"
    };



    protected async override Task OnInitializedAsync() =>
        CVModel.Entities = await Http.GetFromJsonAsync<List<CityCode>>(CVModel.APIURL) ?? new List<CityCode>();

    private async void OnRowClick(GridRowEventArgs<CityCode> args)
        => await CVModel.OnRowClick(args, Mapper);

    private async void DeleteCity()
    {
        await CVModel.DeleteEntity(Http); 
        StateHasChanged();
    }

    private async void FormSubmitted(EditContext editContext)
    {
        await CVModel.FormSubmitted(editContext, Http, Mapper);
        StateHasChanged();
    }

}
